package scala.szh.leetcode

import scala.szh.common.Tools

/**
 * 输入:
 * [
 * ["5","3",".",".","7",".",".",".","."],
 * ["6",".",".","1","9","5",".",".","."],
 * [".","9","8",".",".",".",".","6","."],
 * ["8",".",".",".","6",".",".",".","3"],
 * ["4",".",".","8",".","3",".",".","1"],
 * ["7",".",".",".","2",".",".",".","6"],
 * [".","6",".",".",".",".","2","8","."],
 * [".",".",".","4","1","9",".",".","5"],
 * [".",".",".",".","8",".",".","7","9"]
 * ]
 * 输出: true
 *
 *
 * 输入:
 * [
 *  ["8","3",".",".","7",".",".",".","."],
 *  ["6",".",".","1","9","5",".",".","."],
 *  [".","9","8",".",".",".",".","6","."],
 *  ["8",".",".",".","6",".",".",".","3"],
 *  ["4",".",".","8",".","3",".",".","1"],
 *  ["7",".",".",".","2",".",".",".","6"],
 *  [".","6",".",".",".",".","2","8","."],
 *  [".",".",".","4","1","9",".",".","5"],
 *  [".",".",".",".","8",".",".","7","9"]
 * ]
 * 输出: false
 * 解释: 除了第一行的第一个数字从 5 改为 8 以外，空格内其他数字均与 示例1 相同。
 * 但由于位于左上角的 3x3 宫内有两个 8 存在, 因此这个数独是无效的。
 */
object Solution36 {
  def getArea(i: Int, j: Int): Int = {
    i / 3 * 3 + j / 3
  }

  def isValidSudoku(board: Array[Array[Char]]): Boolean = {
    val row = Array.fill(9)(Set[Char]())
    val col = Array.fill(9)(Set[Char]())
    val area = Array.fill(9)(Set[Char]())
    var ans = true
    for (i <- 0 until board.size) {
      for (j <- 0 until board(i).size) {
        val item = board(i)(j)
        if (!item.equals('.')) {
          if (row(i).contains(item) || col(j).contains(item) || area(getArea(i, j)).contains(item)) {
            ans = false
          }
          row(i) += item
          col(j) += item
          area(getArea(i, j)) += item
        }
      }
    }
    ans
  }

  def main(args: Array[String]): Unit = {
    val arr = Tools.get2DArray[String](
      """[
        | ["8","3",".",".","7",".",".",".","."],
        | ["6",".",".","1","9","5",".",".","."],
        | [".","9","8",".",".",".",".","6","."],
        | ["8",".",".",".","6",".",".",".","3"],
        | ["4",".",".","8",".","3",".",".","1"],
        | ["7",".",".",".","2",".",".",".","6"],
        | [".","6",".",".",".",".","2","8","."],
        | [".",".",".","4","1","9",".",".","5"],
        | [".",".",".",".","8",".",".","7","9"]
        |  ]""".stripMargin)
      .map(_.map(_.toCharArray()(1)))
    Tools.print2D(arr)
    println(isValidSudoku(arr))
  }
}